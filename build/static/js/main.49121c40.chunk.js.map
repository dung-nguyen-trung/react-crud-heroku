{"version":3,"sources":["components/Vdu6.js","App.js","reportWebVitals.js","index.js"],"names":["InputDiv","parentCallback","useState","list","setList","type","placeholder","onChange","e","target","value","onClick","newValue","user","axios","post","then","res","catch","error","console","log","ReactDOM","unmountComponentAtNode","document","getElementById","Note","props","flag","setflag","txt","setTxt","className","defaultValue","children","event","id","xoaID","List","values","setValue","useEffect","data","json","handleChange","index","idSua","noiDung","render","item","map","note","idXoa","deleteID","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"mRAQOA,EAAW,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAAoB,EACZC,mBAAS,IADG,mBAC7BC,EAD6B,KACvBC,EADuB,KAwBpC,OACI,gCACI,uBAAOC,KAAK,OAAOC,YAAY,mBAAmBC,SAxBtC,SAAAC,GAAC,OAAIJ,EAAQI,EAAEC,OAAOC,UAyBlC,wBAAQC,QAvBL,WACP,IAAMC,EAAWT,EAKXU,EAAOV,EAGbW,IAAMC,KAAK,4BAA6B,CAAEF,SACrCG,MAAK,SAACC,GAEHhB,EAAeW,MAChBM,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAGpBG,IAASC,uBAAuBC,SAASC,eAAe,cAMpD,qBA+FNC,EAAO,SAACC,GAAW,IAAD,EAEKzB,oBAAS,GAFd,mBAEb0B,EAFa,KAEPC,EAFO,OAGE3B,mBAAS,IAHX,mBAGb4B,EAHa,KAGRC,EAHQ,KAuBpB,OAAGH,EAEK,sBAAKI,UAAW,WAAhB,UACI,uBAAOC,aAAcN,EAAMO,SAAU3B,SAb3B,SAAAC,GAClBuB,EAAOvB,EAAEC,OAAOC,UAaR,wBAAQC,QAVpB,SAAsBwB,GAElBR,EAAMhB,QAAQmB,EAAKH,EAAMS,IACzBP,GAAQ,IAOA,sBACA,wBAAQlB,QAnBL,WACXkB,GAAQ,IAkBA,yBAMJ,sBAAKG,UAAW,WAAhB,UACI,4BAAIL,EAAMO,WACV,wBAAQvB,QAASgB,EAAMU,MAAvB,sBACA,wBAAQ1B,QAhCJ,WACZkB,GAAQ,IA+BA,0BAODS,EAlIF,WAGT,IAHe,EAIWpC,mBADL,IAHN,mBAIRqC,EAJQ,KAIDC,EAJC,KAwBfC,qBAAU,WACN3B,IAAMC,KAnBE,kCAmBQ,SAAA2B,GAAI,OAAIF,EAASE,MAAO1B,MAAK,SAAA2B,GAAI,OAAIH,EAASG,EAAKD,WACpE,IAIH,IAqBME,EAAe,SAAChC,EAAUiC,GAI5B/B,IAAMC,KAAK,+BAAgC,CAAC+B,MAAOD,EAAOE,QAASnC,IAC9DI,MAAK,SAACC,GAEHuB,EAASvB,EAAIyB,SACdxB,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAIxB,OACI,sBAAKa,UAAW,WAAhB,UACI,qBAAKI,GAAG,aACR,wBAAQzB,QArCD,WAQXW,IAAS0B,OAAO,cAAC,EAAD,CAAU/C,eALT,SAACgD,GAGdT,GAAS,SAAAD,GAAM,4BAAMA,GAAN,CAAaU,UAEuBzB,SAASC,eAAe,cA6B3E,oBAEIc,EAAOW,KAAI,SAASC,EAAKN,GACtB,OACC,cAAC,EAAD,CACIT,GAAIS,EACJR,MAAO,kBAhCV,SAACQ,GACd/B,IAAMC,KAAK,+BAAgC,CAACqC,MAAOP,IAC9C7B,MAAK,SAACC,GAEHuB,EAASvB,EAAIyB,SACdxB,OAAM,SAACC,GACNC,QAAQC,IAAIF,MA0BOkC,CAASR,IACpBlC,QAASiC,EAHb,SAKKO,GALMN,UCvGhBS,MARf,WACE,OACE,qBAAKtB,UAAU,MAAf,SACE,cAAC,EAAD,OCKSuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdlC,IAAS0B,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASC,eAAe,SAM1B8B,M","file":"static/js/main.49121c40.chunk.js","sourcesContent":["// CRUD trong ReactJS\r\nimport React,{useState, useEffect} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n//import '../components/Vdu6.css';\r\nimport './Vdu6.css';\r\nimport axios from 'axios';\r\n\r\n\r\n const InputDiv = ({parentCallback}) => {\r\n    const [list, setList] = useState('');\r\n    const updateState = e => setList(e.target.value);\r\n    \r\n    const send=()=>{\r\n        const newValue = list;\r\n        //parentCallback(newValue);\r\n        //console.log(newValue);\r\n\r\n        //cap nhat data tu reactjs len nodejs  \r\n        const user = list;\r\n        //console.log(list);          \r\n         \r\n        axios.post('http://localhost:4000/add', { user })\r\n            .then((res) => {\r\n                //console.log(res.data);\r\n                parentCallback(newValue);\r\n            }).catch((error) => {\r\n                console.log(error);\r\n        });\r\n        \r\n        ReactDOM.unmountComponentAtNode(document.getElementById('divInput')); // an component InputDiv\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" placeholder=\"Enter your name!\" onChange = {updateState}/>   \r\n            <button onClick={send}>Gui</button> \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst List = () => {\r\n    \r\n    //const initialValue = [\"Hi\",\"Hello\",\"Xin Chao\"];\r\n    const initialValue = [];\r\n    const [values,setValue] = useState(initialValue);\r\n    \r\n    const url = 'http://localhost:4000/getNotes'; //server la nodejs\r\n    \r\n    // Cach 1: su dung fetch data thong thuong\r\n    // useEffect(() => {\r\n    //     // POST request using fetch inside useEffect React hook\r\n    //     const requestOptions = {\r\n    //         method: 'POST',\r\n    //         headers: { 'Content-Type': 'application/json' },\r\n    //         body: JSON.data\r\n    //     };\r\n        \r\n    //     fetch(url, requestOptions)\r\n    //         .then(response => response.json())\r\n    //         .then(data => setValue(data));\r\n    // // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n    // }, []);\r\n\r\n    //Cach 2: su dung axios de fetch data\r\n    useEffect(() => {\r\n        axios.post(url, data => setValue(data)).then(json => setValue(json.data));\r\n    }, [])\r\n\r\n\r\n    \r\n    const addDiv = () =>{ // ham global\r\n        \r\n        //alert(\"clicked\");\r\n        const callback = (item) => {\r\n            // do something with value in parent component, like save to state\r\n            //console.log(item);\r\n            setValue(values=>[...values,item]);\r\n        }\r\n        ReactDOM.render(<InputDiv parentCallback={callback}/>, document.getElementById('divInput'));\r\n    }\r\n\r\n    const deleteID = (index) =>{\r\n        axios.post('http://localhost:4000/delete', {idXoa: index})\r\n            .then((res) => {\r\n                //console.log(res.data);\r\n                setValue(res.data);\r\n            }).catch((error) => {\r\n                console.log(error);\r\n        });\r\n    }\r\n    \r\n    const handleChange = (newValue, index) => {\r\n        //console.log('do something: ', newValue);\r\n        //console.log('do num: ', index);\r\n\r\n        axios.post('http://localhost:4000/update', {idSua: index, noiDung: newValue})\r\n            .then((res) => {\r\n                //console.log(res.data);\r\n                setValue(res.data);\r\n            }).catch((error) => {\r\n                console.log(error);\r\n        });\r\n      } \r\n\r\n    return(\r\n        <div className =\"div-List\">\r\n            <div id=\"divInput\"></div>\r\n            <button onClick={addDiv}> Them </button>\r\n            {\r\n                values.map(function(note,index){\r\n                   return (\r\n                    <Note key={index} \r\n                        id={index}\r\n                        xoaID={()=>deleteID(index)} \r\n                        onClick={handleChange}                        \r\n                    >\r\n                        {note}\r\n                    </Note>\r\n                   );\r\n\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Note = (props) => {\r\n    \r\n    const [flag, setflag ] = useState(false);\r\n    const [txt, setTxt] = useState(\"\");\r\n\r\n    const suaItem = () => {\r\n        setflag(true);\r\n    }\r\n\r\n    const cancel = () => {\r\n        setflag(false);\r\n    }\r\n\r\n    const onInputChange = e => {\r\n        setTxt(e.target.value);\r\n    }\r\n\r\n    function handleChange(event) {\r\n        // Here, we invoke the callback with the new value\r\n        props.onClick(txt, props.id);\r\n        setflag(false);\r\n    }\r\n\r\n    if(flag){\r\n        return (\r\n            <div className =\"div-Note\">\r\n                <input defaultValue={props.children} onChange={onInputChange}/>\r\n                <button onClick={handleChange}>Luu Item</button> \r\n                <button onClick={cancel}>Huy Item</button>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n            <div className =\"div-Note\">\r\n                <p>{props.children}</p>\r\n                <button onClick={props.xoaID}>Xoa Item</button>\r\n                <button onClick={suaItem}>Sua Item</button>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default List;","import './App.css';\nimport List from \"./components/Vdu6\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}